openapi: 3.1.0
x-stoplight:
  id: 466k6ayziv9at
info:
  title: Codat Common
  version: '1.0'
  summary: Codat Common
  license:
    name: Apache 2.0
    identifier: Apache-2.0
  description: |-
    Common API to all of Codat's products.
    Covers creating and managing your companies, data connections, integrations and probably more!
  contact:
    name: Codat
    url: 'https://codat.io'
    email: support@codat.io
servers:
  - url: 'https://api.codat.io'
    description: Codat
tags:
  - name: Companies
    description: Endpoints to manage your Codat companies.
  - name: Data Connections
    description: Endpoints to manage your companies' data connections.
  - name: Migrations
    description: Endpoints that allow you to migrate existing connections into Codat.
  - name: Webhooks
    description: 'Endpoints to manage webhooks, rules and alerts.'
  - name: Company Status
    description: Understand the state of data within Codat.
  - name: Integrations
    description: View and manage your available integrations in Codat.
  - name: Refresh Data
    description: Queue pull operations to refresh data in Codat.
paths:
  /companies:
    get:
      summary: List companies
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Company'
                    type: object
                  - $ref: '#/components/schemas/_Links'
              examples:
                List of Companies:
                  value:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        name: My Test Company
                        platform: ''
                        redirect: 'https://link.codat.io/company/3fa85f64-5717-4562-b3fc-2c963f66afa6'
                        lastSync: '2022-01-01T12:30:00.000Z'
                        dataConnections:
                          - id: 51baa045-4836-4317-a42e-3542e991e581
                            integrationId: 1c312d69-e638-46d4-ad31-72e6c3ba8390
                            integrationKey: vjms
                            sourceId: 396c3158-5dd7-481b-a7c4-a795ca31792b
                            platformName: Pandle
                            linkUrl: 'https://link-api.codat.io/companies/3fa85f64-5717-4562-b3fc-2c963f66afa6/connections/51baa045-4836-4317-a42e-3542e991e581/start'
                            status: Linked
                            lastSync: '2022-01-01T12:30:00.000Z'
                            created: '2022-01-01T11:30:00Z'
                            sourceType: Accounting
                        created: '2022-01-01T11:30:00Z'
                        createdByUserName: Mike Smith
                    pageNumber: 1
                    pageSize: 1
                    totalResults: 1
                    _links:
                      current:
                        href: /companies?page=1&pageSize=100
                      self:
                        href: /companies
            application/xml:
              schema:
                type: object
                properties: {}
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-companies
      description: List all companies that you have created in Codat.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
    post:
      summary: Create a company
      tags:
        - Companies
      operationId: create-company
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  platform:
                    type: string
                  redirect:
                    type: string
                  dataConnections:
                    type: array
                    items:
                      type: object
                      properties: {}
                  created:
                    type: string
                  createdByUserName:
                    type: string
                x-examples:
                  example-1:
                    id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
                    name: My First Company
                    platform: ''
                    redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
                    dataConnections: []
                    created: '2022-11-10T10:45:18.1950523Z'
                    createdByUserName: Dan Tzabar
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Create a new company
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-examples:
                example-1:
                  name: string
                  platformType: string
              properties:
                name:
                  type: string
                platformType:
                  type: string
                  example: gbol
                  pattern: '[a-z][a-z][a-z][a-z]'
                  maxLength: 4
                  minLength: 4
              required:
                - name
            examples:
              Example with platform key:
                value:
                  name: My first company
                  platformType: gbol
              Example without platform key:
                value:
                  name: My second company
  '/companies/{companyId}':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: Get company
      tags:
        - Companies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
            application/xml:
              schema:
                $ref: '#/components/schemas/Company'
              examples:
                example-1:
                  value:
                    id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
                    name: My First Company
                    platform: ''
                    redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
                    dataConnections: []
                    created: '2022-11-10T10:45:18Z'
                    createdByUserName: Dan Tzabar
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: get-companies-companyId
      description: Get metadata for a single company
    delete:
      summary: Delete a company
      operationId: delete-companies-companyId
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: |-
        Delete the given company from Codat.
        This operation is not reversible.
      tags:
        - Companies
    put:
      summary: Update a company name
      operationId: put-companies-companyId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Updates the given company with a new name
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              x-examples:
                example-1:
                  name: foo
            examples:
              example-1:
                value:
                  name: New Name
      tags:
        - Companies
  '/companies/{companyId}/connections':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: List data connections
      tags:
        - Data Connections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        integrationKey: string
                        sourceId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        platformName: string
                        linkUrl: string
                        status: string
                        lastSync: '2022-11-10T11:42:26.059Z'
                        created: '2022-11-10T11:42:26.059Z'
                        sourceType: string
                        dataConnectionErrors:
                          - statusCode: string
                            statusText: string
                            errorMessage: string
                            erroredOnUtc: '2022-11-10T11:42:26.059Z'
                        connectionInfo:
                          additionalProp1: string
                          additionalProp2: string
                          additionalProp3: string
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Connection'
                  - $ref: '#/components/schemas/_Links'
              examples:
                example-1:
                  value:
                    results:
                      - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                        integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                        integrationKey: dfxm
                        sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                        platformName: Basiq
                        linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                        status: Linked
                        lastSync: '2022-10-27T10:22:43.6464237Z'
                        created: '2022-10-27T09:53:29Z'
                        sourceType: Banking
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-data-connections
      description: List the data connections for a company
      parameters:
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
    post:
      summary: Create a data connection
      operationId: create-data-connection
      responses:
        '200':
          description: OK
      description: Create a data connection for a company
      tags:
        - Data Connections
  '/companies/{companyId}/connections/{connectionId}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/connectionId'
    get:
      summary: Get data connection
      tags:
        - Data Connections
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connection'
              examples:
                example-1:
                  value:
                    id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
                    integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
                    integrationKey: dfxm
                    sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
                    platformName: Basiq
                    linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
                    status: Linked
                    lastSync: '2022-10-27T10:22:43.6464237Z'
                    created: '2022-10-27T09:53:29Z'
                    sourceType: Banking
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-data-connection
      description: Get a single data connection for a company
      requestBody:
        content:
          application/json:
            schema:
              type: boolean
            examples:
              Example:
                value: true
    delete:
      summary: Delete data connection
      operationId: delete-dataConnection
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: |-
        Revoke and remove a data connection from a company.
        This operation is not reversible - the end user would need to reauthorize a new data connection if you wish to view new data for this company.
      tags:
        - Data Connections
    patch:
      summary: Unlink data connection
      operationId: patch-companies-companyId-connections-dataConnectionId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
            application/xml:
              schema:
                $ref: '#/components/schemas/Connection'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: 'This allows you to deauthorize a data connection, without deleting it from Codat. This means you can still view any data that has previously been pulled into Codat, and also lets you re-authorize in future if your customer wishes to resume sharing their data.'
      tags:
        - Data Connections
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
              x-examples:
                example-1:
                  status: unlinked
            examples:
              Example:
                value:
                  status: unlinked
        description: ''
  '/companies/{companyId}/data/all':
    parameters:
      - $ref: '#/components/parameters/companyId'
    post:
      summary: Queue pull operations
      operationId: create--many-pull-operations
      responses:
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: Initiate the pull of all data types that are enabled for this company
      tags:
        - Refresh Data
  '/companies/{companyId}/data/queue/{dataType}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/dataType'
    post:
      summary: Queue pull operation
      operationId: create-pull-operation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullOperation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      description: |-
        Queue a single pull operation for the given company and data type.

        This will bring updated data into Codat from the linked integration for you to view.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: connectionId
          description: 'Optionally, provide a data connection id to only queue pull operations on that connection.'
      tags:
        - Refresh Data
  /rules:
    get:
      summary: List webhooks
      tags:
        - Webhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                x-examples:
                  example-1:
                    results:
                      - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        type: string
                        companyId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                        notifiers:
                          emails:
                            - string
                          webhook: string
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
                    _links:
                      self:
                        href: string
                      current:
                        href: string
                      next:
                        href: string
                      previous:
                        href: string
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
                allOf:
                  - type: object
                    $ref: '#/components/schemas/_Links'
                  - $ref: '#/components/schemas/_Links'
              examples:
                Example:
                  value:
                    results:
                      - id: fcfbfe0b-fe73-47ed-a7fe-0018567f5da2
                        type: DataConnectionStatusChanged
                        notifiers:
                          emails: []
                          webhook: 'https://webhook.site/6d385ea9-bcf9-48e4-9103-1958ccb54997'
                    pageNumber: 1
                    pageSize: 100
                    totalResults: 1
                    _links:
                      current:
                        href: /rules?page=1&pageSize=100
                      self:
                        href: /rules
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-rules
      description: List webhooks that you are subscribed to.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
    post:
      summary: Create webhook
      operationId: post-rules
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
      description: Create a new webhook configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        description: Create a webhook with the given configuration.
      tags:
        - Webhooks
  '/rules/{ruleId}':
    parameters:
      - $ref: '#/components/parameters/ruleId'
    get:
      summary: Get webhook
      tags:
        - Webhooks
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-webhook
      description: Get a single webhook
  '/companies/{companyId}/dataStatus':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: Get data status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/DataStatus'
                  - $ref: '#/components/schemas/DataStatus'
              examples:
                Example:
                  value:
                    invoices:
                      dataType: invoices
                      lastSuccessfulSync: '2022-01-01T00:00:00.000Z'
                      currentStatus: success
                      latestSyncId: d03b6979-eb3b-447a-a27a-13cf457a9f48
                      latestSuccessfulSyncId: 6883bba8-514d-423f-ba7f-c38285a80b7f
                    bills:
                      dataType: bills
                      lastSuccessfulSync: '2022-01-01T00:00:00.000Z'
                      currentStatus: failure
                      latestSyncId: d03b6979-eb3b-447a-a27a-13cf457a9f48
                      latestSuccessfulSyncId: 6883bba8-514d-423f-ba7f-c38285a80b7f
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-companies-companyId-dataStatus
      description: Get the state of each data type for a company
      tags:
        - Company Status
  '/companies/{companyId}/data/history':
    parameters:
      - $ref: '#/components/parameters/companyId'
    get:
      summary: Get pull operations
      tags:
        - Company Status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/PullOperation'
                  - $ref: '#/components/schemas/_Links'
              examples:
                Example:
                  value:
                    results:
                      - id: 97d60846-f07a-4d42-b5a0-0bdcc6ebf56b
                        companyId: 4645bd78-8988-45bc-ac9e-67ba5df6e4e5
                        connectionId: 51baa045-4836-4317-a42e-3542e991e581
                        dataType: invoices
                        status: Initial
                        requested: '2022-11-14T11:18:37.2798351Z'
                        progress: 10
                        isCompleted: false
                        isErrored: false
                    _links:
                      self:
                        href: ../dictionary
                      current:
                        href: ../dictionary
                      next:
                        href: ../dictionary
                      previous:
                        href: ../dictionary
                    pageNumber: 0
                    pageSize: 0
                    totalResults: 0
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-company-data-history
      description: Gets the pull operation history (datasets) for a given company.
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
  '/companies/{companyId}/data/history/{datasetId}':
    parameters:
      - $ref: '#/components/parameters/companyId'
      - $ref: '#/components/parameters/datasetId'
    get:
      summary: Get pull operation
      tags:
        - Company Status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullOperation'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-pull-operation
      description: Retrieve information about a single dataset or pull operation.
  /integrations:
    get:
      summary: List integrations
      tags:
        - Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - type: object
                    properties:
                      results:
                        type: array
                        items:
                          $ref: '#/components/schemas/Integration'
                  - $ref: '#/components/schemas/_Links'
        '400':
          $ref: '#/components/responses/Malformed-Query'
        '401':
          $ref: '#/components/responses/Unauthorized'
      operationId: list-integrations
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/query'
        - $ref: '#/components/parameters/orderBy'
      description: List your available integrations
  '/integrations/{platformKey}':
    parameters:
      - $ref: '#/components/parameters/platformKey'
    get:
      summary: Get integration
      tags:
        - Integrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Integration'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/Not-Found'
      operationId: get-integrations-platformKey
      description: ''
components:
  schemas:
    Company:
      type: object
      x-examples:
        example-1:
          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          name: string
          platform: string
          redirect: string
          lastSync: '2022-11-10T11:06:01.435Z'
          dataConnections:
            - id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              integrationKey: string
              sourceId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              platformName: string
              linkUrl: string
              status: string
              lastSync: '2022-11-10T11:06:01.435Z'
              created: '2022-11-10T11:06:01.435Z'
              sourceType: string
              dataConnectionErrors:
                - statusCode: string
                  statusText: string
                  errorMessage: string
                  erroredOnUtc: '2022-11-10T11:06:01.435Z'
              connectionInfo:
                additionalProp1: string
                additionalProp2: string
                additionalProp3: string
          created: '2022-11-10T11:06:01.435Z'
          createdByUserName: string
      examples:
        - id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
          name: My First Company
          platform: ''
          redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
          dataConnections: []
          created: '2022-11-10T10:45:18Z'
          createdByUserName: Dan Tzabar
        - id: ab12c58d-a678-4ebf-a159-ae99e1807bd0
          name: My First Company
          platform: ''
          redirect: 'https://link.codat.io/company/ab12c58d-a678-4ebf-a159-ae99e1807bd0'
          dataConnections:
            - id: a1617464-7f88-46ed-a0d1-1ac585ff7c1f
              integrationId: 3485371f-930d-4614-997a-5dfa2cec546c
              integrationKey: lqai
              sourceId: f4319595-c20d-4b8c-bc9b-a6642e03c29b
              platformName: Partner Commerce
              linkUrl: 'https://link-api.codat.io/companies/b373cf43-44a9-4f7d-9ff3-d9d32da08dbb/connections/a1617464-7f88-46ed-a0d1-1ac585ff7c1f/start'
              status: Linked
              created: '2022-08-30T13:29:22Z'
              sourceType: Commerce
          created: '2022-11-10T10:45:18Z'
          createdByUserName: Dan Tzabar
      title: Company
      description: 'A company in Codat represent a small or medium sized business, whose data you wish to share'
      properties:
        id:
          type: string
          format: uuid
          example: 0498e921-9b53-4396-a412-4f2f5983b0a2
        name:
          type: string
        platform:
          type: string
          deprecated: true
        redirect:
          type: string
          format: uri
          example: 'https://link.codat.io/company/27628208-459c-46a2-a705-5641ce25f739'
        lastSync:
          type: string
          format: date-time
          example: '2022-01-01T12:00:00.000Z'
        created:
          type: string
          format: date-time
          example: '2022-01-01T12:00:00.000Z'
        createdByUserName:
          type: string
        dataConnections:
          type: array
          items:
            $ref: '#/components/schemas/Connection'
      required:
        - id
        - name
        - redirect
    Connection:
      type: object
      x-examples:
        example-1:
          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          integrationKey: string
          sourceId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          platformName: string
          linkUrl: string
          status: string
          lastSync: '2022-11-10T11:32:54.551Z'
          created: '2022-11-10T11:32:54.551Z'
          sourceType: Accounting
          dataConnectionErrors:
            - statusCode: string
              statusText: string
              errorMessage: string
              erroredOnUtc: '2022-11-10T11:32:54.551Z'
          connectionInfo:
            additionalProp1: string
            additionalProp2: string
            additionalProp3: string
      examples:
        - id: ee2eb431-c0fa-4dc9-93fa-d29781c12bcd
          integrationId: bf083d72-62c7-493e-aec9-81b4dbba7e2c
          integrationKey: dfxm
          sourceId: bdd831ce-eebd-4896-89a7-20e5ee8989ee
          platformName: Basiq
          linkUrl: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/ee2eb431-c0fa-4dc9-93fa-d29781c12bcd/start'
          status: Linked
          lastSync: '2022-10-27T10:22:43.6464237Z'
          created: '2022-10-27T09:53:29Z'
          sourceType: Banking
      title: Connection
      description: 'Represents the connection between a source of data, and a Codat company'
      properties:
        id:
          type: string
          format: uuid
          example: 33e35bb4-93e7-441f-b651-f46ca049367b
        integrationId:
          type: string
          format: uuid
          example: fd321cb6-7963-4506-b873-e99593a45e30
        integrationKey:
          type: string
        sourceId:
          type: string
          format: uuid
          example: 35b92968-9851-4095-ad60-395c95cbcba4
        platformName:
          type: string
        linkUrl:
          type: string
          format: uri
          example: 'https://link-api.codat.io/companies/86bd88cb-44ab-4dfb-b32f-87b19b14287f/connections/2e2eb431-c1fa-4dc9-93fa-d29781c12bcd/start'
        status:
          type: string
          enum:
            - PendingAuth
            - Linked
            - Unlinked
            - Deauthorized
          example: Linked
        lastSync:
          type: string
          format: date-time
          example: '2022-01-01T12:00:00.000Z'
        created:
          type: string
          format: date-time
          example: '2022-01-01T12:00:00.000Z'
        sourceType:
          type: string
          example: Accounting
          enum:
            - Accounting
            - Banking
            - Commerce
        dataConnectionErrors:
          type: array
          items:
            type: object
            properties:
              statusCode:
                type: string
              statusText:
                type: string
              errorMessage:
                type: string
              erroredOnUtc:
                type: string
                format: date-time
                example: '2022-01-01T12:00:00.000Z'
        connectionInfo:
          type: object
          properties:
            additionalProp1:
              type: string
            additionalProp2:
              type: string
            additionalProp3:
              type: string
      required:
        - id
        - integrationId
        - integrationKey
        - sourceId
        - platformName
        - linkUrl
        - status
        - created
        - sourceType
      x-stoplight:
        id: 35df6443f7c9d
    PullOperation:
      type: object
      x-examples:
        example-1:
          id: 97d60846-f07a-4d42-b5a0-0bdcc6ebf56b
          companyId: 4645bd78-8988-45bc-ac9e-67ba5df6e4e5
          connectionId: 51baa045-4836-4317-a42e-3542e991e581
          dataType: invoices
          status: Initial
          requested: '2022-11-14T11:18:37.2798351Z'
          progress: 10
          isCompleted: false
          isErrored: false
      examples:
        - id: 97d60846-f07a-4d42-b5a0-0bdcc6ebf56b
          companyId: 4645bd78-8988-45bc-ac9e-67ba5df6e4e5
          connectionId: 51baa045-4836-4317-a42e-3542e991e581
          dataType: invoices
          status: Initial
          requested: '2022-11-14T11:18:37.2798351Z'
          progress: 10
          isCompleted: false
          isErrored: false
      title: Pull Operation
      description: |-
        Information about a queued, in progress or completed pull operation.
        *Formally called `dataset`*
      properties:
        id:
          type: string
          format: uuid
          example: 943accd0-4247-42d8-865b-363c8629e1da
        companyId:
          type: string
          format: uuid
          example: 22ece347-e5f6-4896-95e0-35a4c7f17023
        connectionId:
          type: string
          format: uuid
          example: 50830828-7d39-4367-b0eb-5ddb2de5faa5
        dataType:
          type: string
        status:
          type: string
          enum:
            - Unknown
            - Pending
            - Success
            - Failure
            - TimeOut
            - Initial
          example: Pending
        requested:
          type: string
          format: date-time
          example: '2022-01-01T12:00:00.000Z'
        progress:
          type: integer
        isCompleted:
          type: boolean
        isErrored:
          type: boolean
      required:
        - id
        - companyId
        - connectionId
        - dataType
        - status
        - requested
        - progress
        - isCompleted
        - isErrored
    Webhook:
      type: object
      x-examples:
        example-1:
          id: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          type: string
          companyId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          notifiers:
            emails:
              - string
            webhook: string
      title: Webhook
      description: Configuration to alert to a url or list of email addresses based on the given type / condition.
      examples:
        - id: ff89c50e-a719-4ef5-a182-9917e53927b6
          type: string
          companyId: 39b73b17-cc2e-429e-915d-71654e9dcd1e
          notifiers:
            emails:
              - info@client.com
            webhook: 'https://webhook.client.com'
      properties:
        id:
          type: string
          format: uuid
          example: ff89c50e-a719-4ef5-a182-9917e53927b6
        type:
          type: string
        companyId:
          type: string
          format: uuid
          example: 39b73b17-cc2e-429e-915d-71654e9dcd1e
        notifiers:
          type: object
          properties:
            emails:
              type: array
              items:
                type: string
                format: email
                example: info@client.com
            webhook:
              type: string
              format: uri
              example: 'https://webhook.client.com'
      required:
        - id
        - type
        - notifiers
    _Links:
      x-examples:
        example-1:
          _links:
            self:
              href: string
            current:
              href: string
            next:
              href: string
            previous:
              href: string
      title: _Links
      description: Codat's Paging Model
      examples:
        - _links:
            self:
              href: ../dictionary
            current:
              href: ../dictionary
            next:
              href: ../dictionary
            previous:
              href: ../dictionary
          pageNumber: 0
          pageSize: 0
          totalResults: 0
      allOf:
        - properties:
            _links:
              type: object
              required:
                - self
                - current
              properties:
                self:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri-reference
                current:
                  type: object
                  required:
                    - href
                  properties:
                    href:
                      type: string
                      format: uri-reference
                next:
                  type: object
                  properties:
                    href:
                      type: string
                      format: uri-reference
                previous:
                  type: object
                  properties:
                    href:
                      type: string
                      format: uri-reference
            pageNumber:
              type: integer
            pageSize:
              type: integer
            totalResults:
              type: integer
          required:
            - _links
            - pageNumber
            - pageSize
            - totalResults
      type: object
    DataStatus:
      type: object
      x-examples:
        example-1:
          additionalProp1:
            dataType: string
            lastSuccessfulSync: '2022-11-18T14:52:23.923Z'
            currentStatus: string
            latestSyncId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            latestSuccessfulSyncId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      properties:
        dataType:
          type: object
          properties:
            dataType:
              type: string
            lastSuccessfulSync:
              type: string
            currentStatus:
              type: string
            latestSyncId:
              type: string
            latestSuccessfulSyncId:
              type: string
      examples:
        - invoices:
            dataType: invoices
            lastSuccessfulSync: '2022-01-01T00:00:00.000Z'
            currentStatus: success
            latestSyncId: d03b6979-eb3b-447a-a27a-13cf457a9f48
            latestSuccessfulSyncId: 6883bba8-514d-423f-ba7f-c38285a80b7f
      title: DataStatus
      description: Describes the state of data in the Codat cache for a company and data type
    DatatypeFeature:
      type: object
      x-examples:
        example-1:
          datatype: string
          supportedFeatures:
            - featureType: string
              featureState: string
      properties:
        datatype:
          type: string
        supportedFeatures:
          type: array
          items:
            type: object
            properties:
              featureType:
                type: string
              featureState:
                type: string
                enum:
                  - unknown
                  - release
                  - beta
                  - deprecated
                example: release
            required:
              - featureType
              - featureState
      required:
        - supportedFeatures
      title: DataType Feature
      description: Describes support for a given datatype and associated operations
    Integration:
      type: object
      x-examples:
        example-1:
          key: string
          logoUrl: string
          name: string
          enabled: true
          sourceId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          integrationId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          sourceType: Unknown
          isOfflineConnector: true
          isBeta: true
          supportedEnvironments: Unknown
          linkedConnectionsCount: 0
          totalConnectionsCount: 0
          dataProvidedBy: Unknown
          datatypeFeatures:
            - datatype: string
              supportedFeatures:
                - featureType: string
                  featureState: string
      examples:
        - key: gbol
          logoUrl: 'http://example.com'
          name: Xero
          enabled: true
          sourceId: accounting
          integrationId: 497a18ca-284e-40c0-985d-f72be35d468e
          sourceType: 8193a927-ab7a-45a3-9dc2-d357a4932dfe
          isOfflineConnector: true
          isBeta: true
          dataProvidedBy: string
          datatypeFeatures:
            - datatype: string
              supportedFeatures:
                - featureType: string
                  featureState: release
      properties:
        key:
          type: string
          maxLength: 4
          minLength: 4
          pattern: '[a-z]{4}'
          example: gbol
        logoUrl:
          type: string
          format: uri
        name:
          type: string
          example: Xero
        enabled:
          type: boolean
          description: Whether this integration is enabled for your customers to use
        sourceId:
          type: string
          enum:
            - accounting
            - banking
            - commerce
            - other
            - unknown
          example: accounting
        integrationId:
          type: string
          format: uuid
        sourceType:
          type: string
          format: uuid
        isOfflineConnector:
          type: boolean
        isBeta:
          type: boolean
        dataProvidedBy:
          type: string
        datatypeFeatures:
          type: array
          items:
            $ref: '#/components/schemas/DatatypeFeature'
      required:
        - key
        - logoUrl
        - name
        - enabled
      title: Integration
      description: An integration that Codat supports
  securitySchemes:
    API_Key:
      name: Authorization
      type: apiKey
      in: header
      description: Your base 64 encoded Codat API Key
  responses:
    Unauthorized:
      description: Your API request was not properly authorized.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 401
                service: PublicApi
                error: Unauthorized
                correlationId: 7eb40d6b415d7bcd99ce658268284056
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            example-1:
              value:
                statusCode: 401
                service: PublicApi
                error: Unauthorized
                correlationId: 7eb40d6b415d7bcd99ce658268284056
                canBeRetried: Unknown
                detailedErrorCode: 0
    Malformed-Query:
      description: Your `query` parameter was not correctly formed
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 400
                service: ClientsApi
                error: Error parsing query - Malformed query.
                correlationId: bc997528a9d7abb9161ef45f05d38599
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            example-1:
              value:
                statusCode: 400
                service: ClientsApi
                error: Error parsing query - Malformed query.
                correlationId: bc997528a9d7abb9161ef45f05d38599
                canBeRetried: Unknown
                detailedErrorCode: 0
    Not-Found:
      description: |-
        One or more of the resources you referenced could not be found.
        This might be because your company or data connection id is wrong, or was already deleted.
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
              service:
                type: string
              error:
                type: string
              correlationId:
                type: string
              canBeRetried:
                type: string
              detailedErrorCode:
                type: integer
            x-examples:
              example-1:
                statusCode: 404
                service: PublicApi
                error: Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found
                correlationId: 8fa2b5f4794970a4ee73758f612e8df0
                canBeRetried: Unknown
                detailedErrorCode: 0
          examples:
            Data connection not found:
              value:
                statusCode: 404
                service: PublicApi
                error: Data connection a22dd66b-564a-4832-9b37-7b3ce4aeb7de not found
                correlationId: 8fa2b5f4794970a4ee73758f612e8df0
                canBeRetried: Unknown
                detailedErrorCode: 0
            Company not found:
              value:
                statusCode: 404
                service: ClientsApi
                error: No company was found with ID 846ed55c-974b-4392-a1f1-87b6fdbf3c5e
                correlationId: 0a40c2f31fc8f992fb88b0853e4166f3
                canBeRetried: Unknown
                detailedErrorCode: 0
  parameters:
    companyId:
      name: companyId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: UUID of your SME
    connectionId:
      name: connectionId
      in: path
      required: true
      schema:
        type: string
        format: uuid
      description: ID of your company's data connection
    pageSize:
      name: pageSize
      in: query
      required: true
      schema:
        type: number
        default: 100
        example: 100
        minimum: 1
        maximum: 5000
      description: Number of records to return on the page
    page:
      name: page
      in: query
      required: true
      schema:
        type: number
        minimum: 0
        example: 1
        default: 1
      description: Page Number
    query:
      name: query
      in: query
      required: false
      schema:
        type: string
      description: Codat Query String
    orderBy:
      name: orderBy
      in: query
      required: false
      schema:
        type: string
      description: Field to order results by
    dataType:
      name: dataType
      in: path
      required: true
      schema:
        type: string
        enum:
          - invoices
          - accounts
          - commerce-payments
          - banking-accounts
          - company
          - profitAndLoss
          - commerce-transactions
          - bills
          - customers
        example: customers
      description: A key for a Codat data type
    ruleId:
      name: ruleId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: 7318949f-c008-4936-a8ff-10d7ab563fa6
      description: ID of the webhook or rule
    datasetId:
      name: datasetId
      in: path
      required: true
      schema:
        type: string
        format: uuid
        example: eaed9f0f-e77b-4bc9-a58f-ab8b4b99ab18
      description: ID of a dataset or pull operation
    platformKey:
      name: platformKey
      in: path
      required: true
      schema:
        type: string
        minLength: 4
        maxLength: 4
        pattern: '[a-z]{4}'
        example: gbol
      description: 4 letter key for an integration
security:
  - API_Key: []
